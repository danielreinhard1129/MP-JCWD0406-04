// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sample {
  id        Int      @id @default(autoincrement())
  name      String
  code      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("samples") // if you want to use snake_case format
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  firstName    String
  lastName     String
  codeReferral String   @unique
  password     String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isDeleted    Boolean  @default(false)
  Event        Event[]
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  locationId  Int
  startDate   DateTime
  endDate     DateTime
  price       Float
  limit       Int
  booked      Int      @default(0)
  thumbnail   String
  userId      Int
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  location       Location         @relation(fields: [locationId], references: [id])
  user           User             @relation(fields: [userId], references: [id])
  Event_category Event_category[]
}

model Location {
  id        Int      @id @default(autoincrement())
  city      String
  country   String
  createdAt DateTime @default(now())
  Event     Event[]
}

model Event_category {
  id         Int      @id @default(autoincrement())
  categoryId Int
  eventId    Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  category Category @relation(fields: [categoryId], references: [id])
  event    Event    @relation(fields: [eventId], references: [id])
}

model Category {
  id             Int              @id @default(autoincrement())
  title          String
  description    String
  isDeleted      Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Event_category Event_category[]
}
